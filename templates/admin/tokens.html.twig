{% extends 'base.html.twig' %}

{% block title %}Gestion des Tokens - Admin{% endblock %}

{% block body %}
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1"><i class="bi bi-key me-2"></i>Gestion des tokens</h2>
            <p class="text-muted mb-0">Liens de partage et tokens de téléchargement</p>
        </div>
        <div class="btn-group">
            <a href="{{ path('admin_dashboard') }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Retour
            </a>
            <button class="btn btn-outline-primary" onclick="window.location.reload()">
                <i class="bi bi-arrow-clockwise me-2"></i>Actualiser
            </button>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon me-3">
                            <i class="bi bi-key"></i>
                        </div>
                        <div>
                            <div class="h4 mb-0">{{ tokens|filter(t => not t.revoked and t.expiresAt > date('now') and t.downloadsCount < t.maxDownloads)|length }}</div>
                            <small>Tokens actifs</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon me-3">
                            <i class="bi bi-exclamation-triangle"></i>
                        </div>
                        <div>
                            <div class="h4 mb-0">{{ tokens|filter(t => not t.revoked and t.downloadsCount >= t.maxDownloads)|length }}</div>
                            <small>Tokens épuisés</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-secondary text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon me-3">
                            <i class="bi bi-clock"></i>
                        </div>
                        <div>
                            <div class="h4 mb-0">{{ tokens|filter(t => t.expiresAt <= date('now'))|length }}</div>
                            <small>Tokens expirés</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon me-3">
                            <i class="bi bi-download"></i>
                        </div>
                        <div>
                            <div class="h4 mb-0">
                                {% set totalDownloads = 0 %}
                                {% for token in tokens %}
                                    {% set totalDownloads = totalDownloads + token.downloadsCount %}
                                {% endfor %}
                                {{ totalDownloads }}
                            </div>
                            <small>Total téléchargements</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Statut</label>
                    <select class="form-select" id="statusFilter" onchange="filterTokens()">
                        <option value="">Tous les tokens</option>
                        <option value="active" {% if current_status == 'active' %}selected{% endif %}>Actifs</option>
                        <option value="expired" {% if current_status == 'expired' %}selected{% endif %}>Expirés</option>
                        <option value="exhausted" {% if current_status == 'exhausted' %}selected{% endif %}>Épuisés</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Actions</label>
                    <div class="btn-group w-100">
                        <button class="btn btn-outline-danger btn-sm" onclick="revokeAllExpired()">
                            <i class="bi bi-trash me-1"></i>Révoquer les expirés
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tokens Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="bi bi-list-ul me-2"></i>Liste des tokens
                <span class="badge bg-secondary ms-2">{{ tokens|length }}</span>
            </h5>
        </div>
        <div class="card-body p-0">
            {% if tokens is empty %}
                <div class="text-center py-5">
                    <i class="bi bi-key display-1 text-muted"></i>
                    <h5 class="mt-3 text-muted">Aucun token trouvé</h5>
                    <p class="text-muted">Aucun token de partage n'a été généré pour le moment.</p>
                </div>
            {% else %}
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Token</th>
                                <th>Fichier</th>
                                <th>Créé par</th>
                                <th>Statut</th>
                                <th>Expiration</th>
                                <th>Téléchargements</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for token in tokens %}
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <code class="text-primary bg-light px-2 py-1 rounded" style="font-size: 0.8em;">
                                                {{ token.tokenHash|slice(0, 16) }}...
                                            </code>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2">
                                                {% set extension = token.file.filename|split('.')|last|lower %}
                                                {% if extension in ['jpg', 'jpeg', 'png', 'gif', 'webp'] %}
                                                    <i class="bi bi-image text-info"></i>
                                                {% elseif extension in ['pdf'] %}
                                                    <i class="bi bi-file-earmark-pdf text-danger"></i>
                                                {% elseif extension in ['doc', 'docx'] %}
                                                    <i class="bi bi-file-earmark-word text-primary"></i>
                                                {% elseif extension in ['xls', 'xlsx'] %}
                                                    <i class="bi bi-file-earmark-excel text-success"></i>
                                                {% elseif extension in ['ppt', 'pptx'] %}
                                                    <i class="bi bi-file-earmark-ppt text-warning"></i>
                                                {% elseif extension in ['zip', 'rar', '7z'] %}
                                                    <i class="bi bi-file-earmark-zip text-secondary"></i>
                                                {% else %}
                                                    <i class="bi bi-file-earmark text-muted"></i>
                                                {% endif %}
                                            </div>
                                            <div>
                                                <div class="fw-medium">{{ token.file.filename }}</div>
                                                <small class="text-muted">{{ (token.file.sizeBytes / 1024 / 1024)|number_format(1) }} MB</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div class="fw-medium">{{ token.createdBy.email }}</div>
                                            <small class="text-muted">{{ token.createdAt|date('d/m/Y H:i') }}</small>
                                        </div>
                                    </td>
                                    <td>
                                        {% set now = 'now'|date('U') %}
                                        {% set expiresAt = token.expiresAt.timestamp %}
                                        {% set isExpired = expiresAt < now %}
                                        {% set isExhausted = token.maxDownloads > 0 and token.downloadsCount >= token.maxDownloads %}
                                        
                                        {% if token.revoked %}
                                            <span class="badge bg-danger">
                                                <i class="bi bi-x-circle me-1"></i>Révoqué
                                            </span>
                                        {% elseif isExhausted %}
                                            <span class="badge bg-warning">
                                                <i class="bi bi-exclamation-triangle me-1"></i>Épuisé
                                            </span>
                                        {% elseif isExpired %}
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-clock me-1"></i>Expiré
                                            </span>
                                        {% else %}
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>Actif
                                            </span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <small class="text-muted">
                                            {{ token.expiresAt|date('d/m/Y H:i') }}
                                            {% if not isExpired %}
                                                <br>
                                                <span class="text-info">
                                                    {{ ((expiresAt - now) / 86400)|round }}j restant
                                                </span>
                                            {% endif %}
                                        </small>
                                    </td>
                                    <td>
                                        <div class="text-center">
                                            <div class="fw-bold">{{ token.downloadsCount }}</div>
                                            {% if token.maxDownloads > 0 %}
                                                <small class="text-muted">/ {{ token.maxDownloads }}</small>
                                            {% else %}
                                                <small class="text-muted">/ ∞</small>
                                            {% endif %}
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            {% if not token.revoked %}
                                                <form method="POST" action="{{ path('admin_token_revoke', {id: token.id}) }}" style="display:inline">
                                                    <button class="btn btn-outline-danger btn-sm" 
                                                            title="Révoquer le token"
                                                            onclick="return confirm('Êtes-vous sûr de vouloir révoquer ce token ?')">
                                                        <i class="bi bi-x-circle"></i>
                                                    </button>
                                                </form>
                                            {% endif %}
                                            <button class="btn btn-outline-info btn-sm" 
                                                    title="Voir les détails"
                                                    onclick="showTokenDetails({{ token.id }})">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% endif %}
        </div>
    </div>

    <!-- Token Details Modal -->
    <div class="modal fade" id="tokenDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-info-circle me-2"></i>Détails du token
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="tokenDetailsContent">
                    <!-- Contenu chargé dynamiquement -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function filterTokens() {
    const status = document.getElementById('statusFilter').value;
    const url = new URL(window.location);
    
    if (status) {
        url.searchParams.set('status', status);
    } else {
        url.searchParams.delete('status');
    }
    
    window.location.href = url.toString();
}

function showTokenDetails(tokenId) {
    // TODO: Implémenter l'affichage des détails du token
    alert('Détails du token ' + tokenId + ' (à implémenter)');
}

function revokeAllExpired() {
    if (confirm('Êtes-vous sûr de vouloir révoquer tous les tokens expirés ?')) {
        // TODO: Implémenter la révocation en masse
        alert('Fonction de révocation en masse à implémenter');
    }
}
</script>
{% endblock %}
